{"ast":null,"code":"var _jsxFileName = \"/home/sousman/Development/code/personal-projects/trungeon/trungeon/client_frontend/src/Characters/CharacterLister.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport \"./CharactersCSS/CharacterLister.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CharacterLister = _ref => {\n  _s();\n\n  let {\n    user,\n    selectedCharacter,\n    setSelectedCharacter\n  } = _ref;\n  const [characterArray, setCharacterArray] = useState([]); // const [playerCharName, setPlayerCharName] = useState('')\n\n  useEffect(() => {\n    fetch(\"/api/default-chars\").then(resp => resp.json()).then(characters => setCharacterArray(characters));\n  }, []);\n\n  const confirmCharSelection = charState => {\n    fetch(`/api/characters/${charState.id}`).then(resp => resp.json()).then(character => console.log(character));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"character-select\",\n      children: characterArray.map(character => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: character.char_name,\n          className: \"character\",\n          onClick: () => {\n            setSelectedCharacter(character);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: character.char_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"character-img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: process.env.PUBLIC_URL + `/images/character${character.id}.png`,\n              alt: `character-${character.id}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: `${character.char_name}-desc`,\n            className: \"description\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: character.char_desc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Character Skills\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: character.skills.map(skill => {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: skill.skill_name\n                }, skill.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 28\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, character.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Selected Class: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedCharacter.char_class ? selectedCharacter.char_class : \"No Character Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => confirmCharSelection(selectedCharacter),\n        children: \"Confirm Character Selection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CharacterLister, \"IXPDUcCzEd+ws3Hk3KUSbKI/VRY=\");\n\n_c = CharacterLister;\nexport default CharacterLister;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterLister\");","map":{"version":3,"sources":["/home/sousman/Development/code/personal-projects/trungeon/trungeon/client_frontend/src/Characters/CharacterLister.js"],"names":["React","useEffect","useState","CharacterLister","user","selectedCharacter","setSelectedCharacter","characterArray","setCharacterArray","fetch","then","resp","json","characters","confirmCharSelection","charState","id","character","console","log","map","char_name","process","env","PUBLIC_URL","char_desc","skills","skill","skill_name","char_class"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nimport \"./CharactersCSS/CharacterLister.css\";\n\nconst CharacterLister = ({ user, selectedCharacter, setSelectedCharacter }) => {\n  const [characterArray, setCharacterArray] = useState([]);\n  // const [playerCharName, setPlayerCharName] = useState('')\n\n  useEffect(() => {\n    fetch(\"/api/default-chars\")\n      .then((resp) => resp.json())\n      .then((characters) => setCharacterArray(characters));\n  }, []);\n\n  const confirmCharSelection = (charState) => {\n    fetch(`/api/characters/${charState.id}`)\n      .then((resp) => resp.json())\n      .then((character) => console.log(character));\n  };\n\n  return (\n    <>\n      <div id=\"character-select\">\n        {characterArray.map((character) => {\n          return (\n            <div\n              id={character.char_name}\n              key={character.id}\n              className=\"character\"\n              onClick={() => {\n                setSelectedCharacter(character);\n              }}\n            >\n              <h1>{character.char_name}</h1>\n              <div className=\"character-img\">\n                <img\n                src={\n                  process.env.PUBLIC_URL +\n                  `/images/character${character.id}.png`\n                }\n                alt={`character-${character.id}`}\n                \n              />\n              </div>\n              \n              <div id={`${character.char_name}-desc`} className=\"description\">\n                <p>{character.char_desc}</p>\n                <label>Character Skills</label>\n                <ul>\n                  {character.skills.map((skill) => {\n                    return <li key={skill.id}>{skill.skill_name}</li>;\n                  })}\n                </ul>\n              </div>\n            </div>\n          );\n        })}\n        \n      </div>\n      <div>\n        <h3>Selected Class: </h3>\n        <p>\n          {selectedCharacter.char_class\n            ? selectedCharacter.char_class\n            : \"No Character Selected\"}\n        </p>\n        <button onClick={() => confirmCharSelection(selectedCharacter)}>\n          Confirm Character Selection\n        </button>\n      </div>\n      \n    </>\n  );\n};\n\nexport default CharacterLister;\n"]},"metadata":{},"sourceType":"module"}