{"ast":null,"code":"var _jsxFileName = \"/home/soustop/Dev/projects/into-the-trungeon/client_frontend/src/Options/CaveEntranceOptions.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CaveEntranceOptions = _ref => {\n  _s();\n\n  let {\n    caveEncounter\n  } = _ref;\n  const [searched, setSearched] = useState(false);\n  const [traverseDesc, setTraverseDesc] = useState();\n  let searchObject = caveEncounter.search;\n\n  const traverseRoom = () => {\n    if (searched) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You carefully cross the small path.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You foolhardedly charge forward into the chasm, sending yourself to death\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const searchRoom = () => {\n    fetch(\"/api/searches/2\").then(resp => resp.json()).then(search => console.log(search)).then(() => setSearched(true));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"terrain-options\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => traverseRoom(),\n      children: \"Traverse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => searchRoom(),\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CaveEntranceOptions, \"aK/iLFl7EKV8Bamf4Pv3wDVfxqY=\");\n\n_c = CaveEntranceOptions;\nexport default CaveEntranceOptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"CaveEntranceOptions\");","map":{"version":3,"sources":["/home/soustop/Dev/projects/into-the-trungeon/client_frontend/src/Options/CaveEntranceOptions.js"],"names":["useState","CaveEntranceOptions","caveEncounter","searched","setSearched","traverseDesc","setTraverseDesc","searchObject","search","traverseRoom","searchRoom","fetch","then","resp","json","console","log"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,mBAAmB,GAAG,QAAqB;AAAA;;AAAA,MAApB;AAACC,IAAAA;AAAD,GAAoB;AAC/C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,EAAhD;AAEA,MAAIO,YAAY,GAAGL,aAAa,CAACM,MAAjC;;AAEA,QAAMC,YAAY,GAAG,MAAM;AACzB,QAAIN,QAAJ,EAAc;AACZ,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KAJD,MAIO;AACL,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;AACF,GAVD;;AAaA,QAAMO,UAAU,GAAG,MAAM;AACvBC,IAAAA,KAAK,CAAC,iBAAD,CAAL,CACKC,IADL,CACUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADlB,EAEKF,IAFL,CAEUJ,MAAM,IAAIO,OAAO,CAACC,GAAR,CAAYR,MAAZ,CAFpB,EAGKI,IAHL,CAGU,MAAMR,WAAW,CAAC,IAAD,CAH3B;AAID,GALD;;AAOA,sBACE;AAAK,IAAA,EAAE,EAAC,iBAAR;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAMK,YAAY,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMC,UAAU,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAjCD;;GAAMT,mB;;KAAAA,mB;AAmCN,eAAeA,mBAAf","sourcesContent":["import { useState } from 'react'\n\nconst CaveEntranceOptions = ({caveEncounter}) => {\n  const [searched, setSearched] = useState(false);\n  const [traverseDesc, setTraverseDesc] = useState()\n\n  let searchObject = caveEncounter.search\n     \n  const traverseRoom = () => {\n    if (searched) {\n      return (\n        <p>You carefully cross the small path.</p>\n      )\n    } else {\n      return (\n        <p>You foolhardedly charge forward into the chasm, sending yourself to death</p>\n      )\n    }\n  };\n\n\n  const searchRoom = () => {\n    fetch(\"/api/searches/2\")\n        .then(resp => resp.json())\n        .then(search => console.log(search))\n        .then(() => setSearched(true))\n  };\n    \n  return (\n    <div id=\"terrain-options\">\n      <button onClick={() => traverseRoom()}>Traverse</button>\n      <br/>\n      <button onClick={() => searchRoom()}>Search</button>\n    </div>\n  );\n};\n\nexport default CaveEntranceOptions;\n"]},"metadata":{},"sourceType":"module"}