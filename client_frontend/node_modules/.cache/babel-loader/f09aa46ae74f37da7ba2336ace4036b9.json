{"ast":null,"code":"var _jsxFileName = \"/home/soustop/Dev/projects/into-the-trungeon/client_frontend/src/characters/CharacterLister.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CharacterLister = _ref => {\n  _s();\n\n  let {\n    user,\n    selectedCharacter,\n    setSelectedCharacter\n  } = _ref;\n  const [characterArray, setCharacterArray] = useState([]);\n  useEffect(() => {\n    fetch(\"/api/characters\").then(resp => resp.json()).then(characters => setCharacterArray(characters));\n  }, []);\n\n  const confirmCharSelection = e => {\n    setSelectedCharacter({\n      char_name: e.target.value,\n      user_id: user.id\n    });\n    fetch(\"/api/characters\", {\n      method: \"POST\",\n      body: selectedCharacter\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"character_select\",\n    children: [characterArray.map(character => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: character.char_name,\n        onClick: () => {\n          setSelectedCharacter(character);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: character.char_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `${character.char_name}-desc`,\n          className: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: character.char_desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Character Skills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: character.skills.map(skill => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: skill.skill_name\n              }, skill.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, character.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      value: selectedCharacter.char_name,\n      onClick: e => confirmCharSelection(e),\n      children: \"Confirm Character Selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CharacterLister, \"IXPDUcCzEd+ws3Hk3KUSbKI/VRY=\");\n\n_c = CharacterLister;\nexport default CharacterLister;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterLister\");","map":{"version":3,"sources":["/home/soustop/Dev/projects/into-the-trungeon/client_frontend/src/characters/CharacterLister.js"],"names":["React","useEffect","useState","CharacterLister","user","selectedCharacter","setSelectedCharacter","characterArray","setCharacterArray","fetch","then","resp","json","characters","confirmCharSelection","e","char_name","target","value","user_id","id","method","body","map","character","char_desc","skills","skill","skill_name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,eAAe,GAAG,QAAuD;AAAA;;AAAA,MAAtD;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,iBAAR;AAA2BC,IAAAA;AAA3B,GAAsD;AAC7E,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,EAAD,CAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAAC,iBAAD,CAAL,CACGC,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESG,UAAD,IAAgBL,iBAAiB,CAACK,UAAD,CAFzC;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,oBAAoB,GAAIC,CAAD,IAAO;AAClCT,IAAAA,oBAAoB,CAAC;AACnBU,MAAAA,SAAS,EAAED,CAAC,CAACE,MAAF,CAASC,KADD;AAEnBC,MAAAA,OAAO,EAAEf,IAAI,CAACgB;AAFK,KAAD,CAApB;AAIAX,IAAAA,KAAK,CAAC,iBAAD,EAAoB;AACvBY,MAAAA,MAAM,EAAC,MADgB;AAEvBC,MAAAA,IAAI,EAAEjB;AAFiB,KAApB,CAAL;AAID,GATD;;AAWA,sBACE;AAAK,IAAA,EAAE,EAAC,kBAAR;AAAA,eACGE,cAAc,CAACgB,GAAf,CAAoBC,SAAD,IAAe;AACjC,0BACE;AACE,QAAA,EAAE,EAAEA,SAAS,CAACR,SADhB;AAGE,QAAA,OAAO,EAAE,MAAM;AACbV,UAAAA,oBAAoB,CAACkB,SAAD,CAApB;AACD,SALH;AAAA,gCAOE;AAAA,oBAAKA,SAAS,CAACR;AAAf;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AAAK,UAAA,EAAE,EAAG,GAAEQ,SAAS,CAACR,SAAU,OAAhC;AAAwC,UAAA,SAAS,EAAC,aAAlD;AAAA,kCACE;AAAA,sBAAIQ,SAAS,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBACGD,SAAS,CAACE,MAAV,CAAiBH,GAAjB,CAAqBI,KAAK,IAAI;AAC7B,kCACE;AAAA,0BAAoBA,KAAK,CAACC;AAA1B,iBAASD,KAAK,CAACP,EAAf;AAAA;AAAA;AAAA;AAAA,sBADF;AAGD,aAJA;AADH;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA,SAEOI,SAAS,CAACJ,EAFjB;AAAA;AAAA;AAAA;AAAA,cADF;AAuBD,KAxBA,CADH,eA0BE;AAAQ,MAAA,KAAK,EAAEf,iBAAiB,CAACW,SAAjC;AAA4C,MAAA,OAAO,EAAGD,CAAD,IAAOD,oBAAoB,CAACC,CAAD,CAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAlDD;;GAAMZ,e;;KAAAA,e;AAoDN,eAAeA,eAAf","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nconst CharacterLister = ({ user, selectedCharacter, setSelectedCharacter }) => {\n  const [characterArray, setCharacterArray] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/api/characters\")\n      .then((resp) => resp.json())\n      .then((characters) => setCharacterArray(characters));\n  }, []);\n\n  const confirmCharSelection = (e) => {\n    setSelectedCharacter({\n      char_name: e.target.value,\n      user_id: user.id,\n    })\n    fetch(\"/api/characters\", {\n      method:\"POST\",\n      body: selectedCharacter\n    })\n  }\n\n  return (\n    <div id=\"character_select\">\n      {characterArray.map((character) => {\n        return (\n          <div\n            id={character.char_name}\n            key={character.id}\n            onClick={() => {\n              setSelectedCharacter(character);\n            }}\n          >\n            <h1>{character.char_name}</h1> \n            <div id={`${character.char_name}-desc`} className=\"description\">\n              <p>{character.char_desc}</p>\n              <label>Character Skills</label>\n              <ul>\n                {character.skills.map(skill => {\n                  return (\n                    <li key={skill.id}>{skill.skill_name}</li>\n                  )\n                })}\n              </ul>\n            </div>\n            \n          </div>\n        );\n      })}\n      <button value={selectedCharacter.char_name} onClick={(e) => confirmCharSelection(e)}>Confirm Character Selection</button>\n    </div>\n  );\n};\n\nexport default CharacterLister;\n"]},"metadata":{},"sourceType":"module"}