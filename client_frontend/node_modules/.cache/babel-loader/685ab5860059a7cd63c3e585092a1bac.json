{"ast":null,"code":"var _jsxFileName = \"/home/soustop/Dev/projects/into-the-trungeon/client_frontend/src/Options/CaveEntranceOptions.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CaveEntranceOptions = _ref => {\n  _s();\n\n  let {\n    setCaveEncounterLog,\n    caveEncounterLog\n  } = _ref;\n  const [searched, setSearched] = useState(false);\n  const [traverseDesc, setTraverseDesc] = useState(); // let searchObject = caveEncounter && caveEncounter.searches\n\n  const traverseRoom = () => {\n    if (searched) {\n      setCaveEncounterLog([...caveEncounterLog, 'You ridge of stone on the farside of the room, you are able to cross safely there.']);\n    } else {\n      return setCaveEncounterLog([...caveEncounterLog, 'You foolhardedly charge forward into the chasm, sending yourself to death']);\n    }\n  };\n\n  const searchRoom = () => {\n    fetch(\"/api/searches/2\").then(resp => resp.json()).then(search => setCaveEncounterLog()).then(() => setSearched(true));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"terrain-options\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => traverseRoom(),\n      children: \"Traverse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => searchRoom(),\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CaveEntranceOptions, \"aK/iLFl7EKV8Bamf4Pv3wDVfxqY=\");\n\n_c = CaveEntranceOptions;\nexport default CaveEntranceOptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"CaveEntranceOptions\");","map":{"version":3,"sources":["/home/soustop/Dev/projects/into-the-trungeon/client_frontend/src/Options/CaveEntranceOptions.js"],"names":["useState","CaveEntranceOptions","setCaveEncounterLog","caveEncounterLog","searched","setSearched","traverseDesc","setTraverseDesc","traverseRoom","searchRoom","fetch","then","resp","json","search"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,mBAAmB,GAAG,QAA6C;AAAA;;AAAA,MAA5C;AAACC,IAAAA,mBAAD;AAAsBC,IAAAA;AAAtB,GAA4C;AACvE,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,EAAhD,CAFuE,CAIvE;;AAEA,QAAMQ,YAAY,GAAG,MAAM;AACzB,QAAIJ,QAAJ,EAAc;AACZF,MAAAA,mBAAmB,CAAC,CAAC,GAAGC,gBAAJ,EAAsB,oFAAtB,CAAD,CAAnB;AACD,KAFD,MAEO;AACL,aACED,mBAAmB,CAAC,CAAC,GAAGC,gBAAJ,EAAsB,2EAAtB,CAAD,CADrB;AAGD;AACF,GARD;;AAUA,QAAMM,UAAU,GAAG,MAAM;AACvBC,IAAAA,KAAK,CAAC,iBAAD,CAAL,CACKC,IADL,CACUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADlB,EAEKF,IAFL,CAEUG,MAAM,IAAIZ,mBAAmB,EAFvC,EAGKS,IAHL,CAGU,MAAMN,WAAW,CAAC,IAAD,CAH3B;AAID,GALD;;AAOA,sBACE;AAAK,IAAA,EAAE,EAAC,iBAAR;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAMG,YAAY,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMC,UAAU,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA9BD;;GAAMR,mB;;KAAAA,mB;AAgCN,eAAeA,mBAAf","sourcesContent":["import { useState } from 'react'\n\nconst CaveEntranceOptions = ({setCaveEncounterLog, caveEncounterLog}) => {\n  const [searched, setSearched] = useState(false);\n  const [traverseDesc, setTraverseDesc] = useState()\n\n  // let searchObject = caveEncounter && caveEncounter.searches\n  \n  const traverseRoom = () => {\n    if (searched) {\n      setCaveEncounterLog([...caveEncounterLog, 'You ridge of stone on the farside of the room, you are able to cross safely there.'])\n    } else {\n      return (\n        setCaveEncounterLog([...caveEncounterLog, 'You foolhardedly charge forward into the chasm, sending yourself to death'])\n      )\n    }\n  };\n\n  const searchRoom = () => {\n    fetch(\"/api/searches/2\")\n        .then(resp => resp.json())\n        .then(search => setCaveEncounterLog())\n        .then(() => setSearched(true))\n  };\n    \n  return (\n    <div id=\"terrain-options\">\n      <button onClick={() => traverseRoom()}>Traverse</button>\n      <br/>\n      <button onClick={() => searchRoom()}>Search</button>\n    </div>\n  );\n};\n\nexport default CaveEntranceOptions;\n"]},"metadata":{},"sourceType":"module"}