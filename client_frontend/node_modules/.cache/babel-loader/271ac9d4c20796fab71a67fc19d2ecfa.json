{"ast":null,"code":"var _jsxFileName = \"/home/soustop/Dev/projects/into-the-trungeon/client_frontend/src/Encounters/CaveEncounter.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport CaveEntranceOptions from \"../Options/CaveEntranceOptions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CaveEncounter = _ref => {\n  _s();\n\n  let {\n    user\n  } = _ref;\n  const [playerChar, setPlayerChar] = useState({});\n  const [charAlive, setCharAlive] = useState(true);\n  const [passedRoom, setPassedRoom] = useState(false);\n  const [caveEncounter, setCaveEncounter] = useState({});\n  const [caveEncounterLog, setCaveEncounterLog] = useState([]);\n  useEffect(() => {\n    fetch(\"/api/encounters/2\").then(resp => resp.json()).then(encounter => setCaveEncounter(encounter));\n  }, []);\n  let skills = playerChar.skills;\n  let items = playerChar.items;\n  let spells = playerChar.spells;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"encounter-one\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: caveEncounter.encounter_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: caveEncounter.encounter_desc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), caveEncounterLog && caveEncounterLog.map(log => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: log\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 18\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(CaveEntranceOptions, {\n      charAlive: charAlive,\n      setCharAlive: setCharAlive,\n      caveEncounterLog: caveEncounterLog,\n      setCaveEncounterLog: setCaveEncounterLog,\n      setPassedRoom: setPassedRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), charAlive ? passedRoom ? /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/encounter-2\",\n      exact: true,\n      children: \"Next Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Make a choice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/\",\n      children: \"You are dead\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: playerChar.char_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: playerChar.char_desc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Skills\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), skills && skills.map(skill => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: skill.skill_name,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: skill.skill_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: skill.skill_desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)]\n      }, skill.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), items && items.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: item.item_name,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: item.item_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.item_desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Spells\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), spells && spells.map(spell => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: spell.item_name,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: spell.spell_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: spell.spell_desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)]\n      }, spell.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CaveEncounter, \"HT3N1iqdID4hmmiL+eg29n/d5pg=\");\n\n_c = CaveEncounter;\nexport default CaveEncounter;\n\nvar _c;\n\n$RefreshReg$(_c, \"CaveEncounter\");","map":{"version":3,"sources":["/home/soustop/Dev/projects/into-the-trungeon/client_frontend/src/Encounters/CaveEncounter.js"],"names":["React","useEffect","useState","NavLink","CaveEntranceOptions","CaveEncounter","user","playerChar","setPlayerChar","charAlive","setCharAlive","passedRoom","setPassedRoom","caveEncounter","setCaveEncounter","caveEncounterLog","setCaveEncounterLog","fetch","then","resp","json","encounter","skills","items","spells","encounter_name","encounter_desc","map","log","char_name","char_desc","skill","skill_name","skill_desc","id","item","item_name","item_desc","spell","spell_name","spell_desc"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAOC,mBAAP,MAAgC,gCAAhC;;;AAEA,MAAMC,aAAa,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAClC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACa,gBAAD,EAAmBC,mBAAnB,IAA0Cd,QAAQ,CAAC,EAAD,CAAxD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,KAAK,CAAC,mBAAD,CAAL,CACGC,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESG,SAAD,IAAeP,gBAAgB,CAACO,SAAD,CAFvC;AAGD,GAJQ,EAIN,EAJM,CAAT;AAQA,MAAIC,MAAM,GAAGf,UAAU,CAACe,MAAxB;AACA,MAAIC,KAAK,GAAGhB,UAAU,CAACgB,KAAvB;AACA,MAAIC,MAAM,GAAGjB,UAAU,CAACiB,MAAxB;AAEA,sBACE;AAAK,IAAA,EAAE,EAAC,eAAR;AAAA,4BACE;AAAA,gBAAKX,aAAa,CAACY;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIZ,aAAa,CAACa;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGX,gBAAgB,IACfA,gBAAgB,CAACY,GAAjB,CAAsBC,GAAD,IAAS;AAC5B,0BAAO;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,CALJ,eAQE,QAAC,mBAAD;AACE,MAAA,SAAS,EAAEnB,SADb;AAEE,MAAA,YAAY,EAAEC,YAFhB;AAGE,MAAA,gBAAgB,EAAEK,gBAHpB;AAIE,MAAA,mBAAmB,EAAEC,mBAJvB;AAKE,MAAA,aAAa,EAAEJ;AALjB;AAAA;AAAA;AAAA;AAAA,YARF,EAeGH,SAAS,GACRE,UAAU,gBACR,QAAC,OAAD;AAAS,MAAA,EAAE,EAAC,cAAZ;AAA2B,MAAA,KAAK,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJM,gBAOR,QAAC,OAAD;AAAS,MAAA,EAAE,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ,eAwBE;AAAA,gBAAKJ,UAAU,CAACsB;AAAhB;AAAA;AAAA;AAAA;AAAA,YAxBF,eAyBE;AAAA,gBAAItB,UAAU,CAACuB;AAAf;AAAA;AAAA;AAAA;AAAA,YAzBF,eA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BF,EA2BGR,MAAM,IACLA,MAAM,CAACK,GAAP,CAAYI,KAAD,IAAW;AACpB,0BACE;AAAoB,QAAA,EAAE,EAAEA,KAAK,CAACC,UAA9B;AAAA,gCACE;AAAA,oBAAKD,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAID,KAAK,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,SAAUF,KAAK,CAACG,EAAhB;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARD,CA5BJ,eAqCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArCF,EAsCGX,KAAK,IACJA,KAAK,CAACI,GAAN,CAAWQ,IAAD,IAAU;AAClB,0BACE;AAAmB,QAAA,EAAE,EAAEA,IAAI,CAACC,SAA5B;AAAA,gCACE;AAAA,oBAAKD,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,SAAUF,IAAI,CAACD,EAAf;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARD,CAvCJ,eAgDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhDF,EAiDGV,MAAM,IACLA,MAAM,CAACG,GAAP,CAAYW,KAAD,IAAW;AACpB,0BACE;AAAoB,QAAA,EAAE,EAAEA,KAAK,CAACF,SAA9B;AAAA,gCACE;AAAA,oBAAKE,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAID,KAAK,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAUF,KAAK,CAACJ,EAAhB;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPD,CAlDJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6DD,CAjFD;;GAAM7B,a;;KAAAA,a;AAmFN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport CaveEntranceOptions from \"../Options/CaveEntranceOptions\";\n\nconst CaveEncounter = ({ user }) => {\n  const [playerChar, setPlayerChar] = useState({});\n  const [charAlive, setCharAlive] = useState(true);\n  const [passedRoom, setPassedRoom] = useState(false);\n\n  const [caveEncounter, setCaveEncounter] = useState({});\n  const [caveEncounterLog, setCaveEncounterLog] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/api/encounters/2\")\n      .then((resp) => resp.json())\n      .then((encounter) => setCaveEncounter(encounter));\n  }, []);\n\n\n\n  let skills = playerChar.skills;\n  let items = playerChar.items;\n  let spells = playerChar.spells;\n\n  return (\n    <div id=\"encounter-one\">\n      <h1>{caveEncounter.encounter_name}</h1>\n      <p>{caveEncounter.encounter_desc}</p>\n      <br />\n      {caveEncounterLog &&\n        caveEncounterLog.map((log) => {\n          return <p>{log}</p>;\n        })}\n      <CaveEntranceOptions\n        charAlive={charAlive}\n        setCharAlive={setCharAlive}\n        caveEncounterLog={caveEncounterLog}\n        setCaveEncounterLog={setCaveEncounterLog}\n        setPassedRoom={setPassedRoom}\n      />\n      {charAlive ? (\n        passedRoom ? (\n          <NavLink to=\"/encounter-2\" exact>Next Room</NavLink>\n        ) : (\n          <p>Make a choice</p>\n        )\n      ) : (\n        <NavLink to=\"/\">You are dead</NavLink>\n      )}\n      <h2>{playerChar.char_name}</h2>\n      <p>{playerChar.char_desc}</p>\n      <h3>Skills</h3>\n      {skills &&\n        skills.map((skill) => {\n          return (\n            <div key={skill.id} id={skill.skill_name}>\n              <h4>{skill.skill_name}</h4>\n              <p>{skill.skill_desc}</p>\n              <br />\n            </div>\n          );\n        })}\n      <h3>Items</h3>\n      {items &&\n        items.map((item) => {\n          return (\n            <div key={item.id} id={item.item_name}>\n              <h4>{item.item_name}</h4>\n              <p>{item.item_desc}</p>\n              <br />\n            </div>\n          );\n        })}\n      <h3>Spells</h3>\n      {spells &&\n        spells.map((spell) => {\n          return (\n            <div key={spell.id} id={spell.item_name}>\n              <h4>{spell.spell_name}</h4>\n              <p>{spell.spell_desc}</p>\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default CaveEncounter;\n"]},"metadata":{},"sourceType":"module"}