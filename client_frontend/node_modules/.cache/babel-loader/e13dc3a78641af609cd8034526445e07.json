{"ast":null,"code":"var _jsxFileName = \"/home/soustop/Dev/projects/into-the-trungeon/client_frontend/src/Options/LoneGoblinOptions.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoneGoblinOptions = (setCharAlive, goblinEncounterLog, setGoblinEncounterLog, passedRoom, setPassedRoom) => {\n  _s();\n\n  const [searched, setSearched] = useState(false);\n\n  const traverseRoom = () => {\n    if (searched) {\n      setGoblinEncounterLog([...goblinEncounterLog, \"You look to see the sobbing goblin turn its head towards you, but it seems to pay you no mind. You cross the room without issue.\"]);\n      setPassedRoom(true);\n    } else {\n      setGoblinEncounterLog([...goblinEncounterLog, \"You foolhardedly charge forward into the chasm, sending yourself to death\"]);\n      setCharAlive(false);\n      console.log(goblinEncounterLog);\n    }\n  };\n\n  const searchRoom = () => {\n    fetch(\"/api/searches/3\").then(resp => resp.json()).then(search => setGoblinEncounterLog([...goblinEncounterLog, search.search_desc])).then(() => setSearched(true));\n  };\n\n  const sneakRoom = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"goblin-options\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => traverseRoom(),\n      children: \"Traverse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => searchRoom(),\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sneakRoom(),\n      children: \"Sneak\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoneGoblinOptions, \"IP+Wl8dnkz1iCT2InrO+78W6ntI=\");\n\n_c = LoneGoblinOptions;\nexport default LoneGoblinOptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoneGoblinOptions\");","map":{"version":3,"sources":["/home/soustop/Dev/projects/into-the-trungeon/client_frontend/src/Options/LoneGoblinOptions.js"],"names":["React","useState","LoneGoblinOptions","setCharAlive","goblinEncounterLog","setGoblinEncounterLog","passedRoom","setPassedRoom","searched","setSearched","traverseRoom","console","log","searchRoom","fetch","then","resp","json","search","search_desc","sneakRoom"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,iBAAiB,GAAG,CACxBC,YADwB,EAExBC,kBAFwB,EAGxBC,qBAHwB,EAIxBC,UAJwB,EAKxBC,aALwB,KAMrB;AAAA;;AACH,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMS,YAAY,GAAG,MAAM;AACzB,QAAIF,QAAJ,EAAc;AACZH,MAAAA,qBAAqB,CAAC,CACpB,GAAGD,kBADiB,EAEpB,kIAFoB,CAAD,CAArB;AAIAG,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAND,MAMO;AACLF,MAAAA,qBAAqB,CAAC,CACpB,GAAGD,kBADiB,EAEpB,2EAFoB,CAAD,CAArB;AAIAD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYR,kBAAZ;AACD;AACF,GAfD;;AAiBA,QAAMS,UAAU,GAAG,MAAM;AACvBC,IAAAA,KAAK,CAAC,iBAAD,CAAL,CACGC,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESG,MAAD,IACJb,qBAAqB,CAAC,CAAC,GAAGD,kBAAJ,EAAwBc,MAAM,CAACC,WAA/B,CAAD,CAHzB,EAKGJ,IALH,CAKQ,MAAMN,WAAW,CAAC,IAAD,CALzB;AAMD,GAPD;;AASA,QAAMW,SAAS,GAAG,MAAM,CAAE,CAA1B;;AAEA,sBACE;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAMV,YAAY,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMG,UAAU,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,OAAO,EAAE,MAAMO,SAAS,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA9CD;;GAAMlB,iB;;KAAAA,iB;AAgDN,eAAeA,iBAAf","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nconst LoneGoblinOptions = (\n  setCharAlive,\n  goblinEncounterLog,\n  setGoblinEncounterLog,\n  passedRoom,\n  setPassedRoom\n) => {\n  const [searched, setSearched] = useState(false);\n\n  const traverseRoom = () => {\n    if (searched) {\n      setGoblinEncounterLog([\n        ...goblinEncounterLog,\n        \"You look to see the sobbing goblin turn its head towards you, but it seems to pay you no mind. You cross the room without issue.\",\n      ]);\n      setPassedRoom(true);\n    } else {\n      setGoblinEncounterLog([\n        ...goblinEncounterLog,\n        \"You foolhardedly charge forward into the chasm, sending yourself to death\",\n      ]);\n      setCharAlive(false);\n      console.log(goblinEncounterLog);\n    }\n  };\n\n  const searchRoom = () => {\n    fetch(\"/api/searches/3\")\n      .then((resp) => resp.json())\n      .then((search) =>\n        setGoblinEncounterLog([...goblinEncounterLog, search.search_desc])\n      )\n      .then(() => setSearched(true));\n  };\n\n  const sneakRoom = () => {};\n\n  return (\n    <div id=\"goblin-options\">\n      <button onClick={() => traverseRoom()}>Traverse</button>\n      <br />\n      <button onClick={() => searchRoom()}>Search</button>\n      <br />\n      <button onClick={() => sneakRoom()}>Sneak</button>\n    </div>\n  );\n};\n\nexport default LoneGoblinOptions;\n"]},"metadata":{},"sourceType":"module"}