{"ast":null,"code":"var _jsxFileName = \"/home/soustop/Dev/projects/into-the-trungeon/client_frontend/src/Encounters/CaveEncounter.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport CaveEntranceOptions from \"../Options/CaveEntranceOptions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CaveEncounter = _ref => {\n  _s();\n\n  let {\n    user\n  } = _ref;\n  const [playerChar, setPlayerChar] = useState({});\n  const [charAlive, setCharAlive] = useState(true);\n  const [passedRoom, setPassedRoom] = useState(false);\n  const [caveEncounter, setCaveEncounter] = useState({});\n  const [caveEncounterLog, setCaveEncounterLog] = useState([]);\n  useEffect(() => {\n    fetch(\"/api/encounters/2\").then(resp => resp.json()).then(encounter => setCaveEncounter(encounter));\n  }, []);\n  useEffect(() => {\n    fetch(\"/api/char\").then(resp => resp.json()).then(char => setPlayerChar(char));\n  }, []);\n  let skills = playerChar.skills;\n  let items = playerChar.items;\n  let spells = playerChar.spells;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"encounter-one\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: caveEncounter.encounter_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: caveEncounter.encounter_desc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), caveEncounterLog && caveEncounterLog.map(log => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: log\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 18\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(CaveEntranceOptions, {\n      charAlive: charAlive,\n      setCharAlive: setCharAlive,\n      caveEncounterLog: caveEncounterLog,\n      setCaveEncounterLog: setCaveEncounterLog,\n      setPassedRoom: setPassedRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), charAlive ? passedRoom ? /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/encounter-2\",\n      exact: true,\n      children: \"Next Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Make a choice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/\",\n      children: \"You are dead\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CaveEncounter, \"4/9aEMuNt1K6Z+6HfmTEGOVMado=\");\n\n_c = CaveEncounter;\nexport default CaveEncounter;\n\nvar _c;\n\n$RefreshReg$(_c, \"CaveEncounter\");","map":{"version":3,"sources":["/home/soustop/Dev/projects/into-the-trungeon/client_frontend/src/Encounters/CaveEncounter.js"],"names":["React","useEffect","useState","NavLink","CaveEntranceOptions","CaveEncounter","user","playerChar","setPlayerChar","charAlive","setCharAlive","passedRoom","setPassedRoom","caveEncounter","setCaveEncounter","caveEncounterLog","setCaveEncounterLog","fetch","then","resp","json","encounter","char","skills","items","spells","encounter_name","encounter_desc","map","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAOC,mBAAP,MAAgC,gCAAhC;;;AAEA,MAAMC,aAAa,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAClC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACa,gBAAD,EAAmBC,mBAAnB,IAA0Cd,QAAQ,CAAC,EAAD,CAAxD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,KAAK,CAAC,mBAAD,CAAL,CACGC,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESG,SAAD,IAAeP,gBAAgB,CAACO,SAAD,CAFvC;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMApB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,KAAK,CAAC,WAAD,CAAL,CACGC,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESI,IAAD,IAAUd,aAAa,CAACc,IAAD,CAF/B;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,MAAIC,MAAM,GAAGhB,UAAU,CAACgB,MAAxB;AACA,MAAIC,KAAK,GAAGjB,UAAU,CAACiB,KAAvB;AACA,MAAIC,MAAM,GAAGlB,UAAU,CAACkB,MAAxB;AAEA,sBACE;AAAK,IAAA,EAAE,EAAC,eAAR;AAAA,4BACE;AAAA,gBAAKZ,aAAa,CAACa;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIb,aAAa,CAACc;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGZ,gBAAgB,IACfA,gBAAgB,CAACa,GAAjB,CAAsBC,GAAD,IAAS;AAC5B,0BAAO;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,CALJ,eAQE,QAAC,mBAAD;AACE,MAAA,SAAS,EAAEpB,SADb;AAEE,MAAA,YAAY,EAAEC,YAFhB;AAGE,MAAA,gBAAgB,EAAEK,gBAHpB;AAIE,MAAA,mBAAmB,EAAEC,mBAJvB;AAKE,MAAA,aAAa,EAAEJ;AALjB;AAAA;AAAA;AAAA;AAAA,YARF,EAeGH,SAAS,GACRE,UAAU,gBACR,QAAC,OAAD;AAAS,MAAA,EAAE,EAAC,cAAZ;AAA2B,MAAA,KAAK,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJM,gBAOR,QAAC,OAAD;AAAS,MAAA,EAAE,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAnDD;;GAAMN,a;;KAAAA,a;AAqDN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport CaveEntranceOptions from \"../Options/CaveEntranceOptions\";\n\nconst CaveEncounter = ({ user }) => {\n  const [playerChar, setPlayerChar] = useState({});\n  const [charAlive, setCharAlive] = useState(true);\n  const [passedRoom, setPassedRoom] = useState(false);\n\n  const [caveEncounter, setCaveEncounter] = useState({});\n  const [caveEncounterLog, setCaveEncounterLog] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/api/encounters/2\")\n      .then((resp) => resp.json())\n      .then((encounter) => setCaveEncounter(encounter));\n  }, []);\n\n  useEffect(() => {\n    fetch(\"/api/char\")\n      .then((resp) => resp.json())\n      .then((char) => setPlayerChar(char));\n  }, []);\n\n  let skills = playerChar.skills;\n  let items = playerChar.items;\n  let spells = playerChar.spells;\n\n  return (\n    <div id=\"encounter-one\">\n      <h1>{caveEncounter.encounter_name}</h1>\n      <p>{caveEncounter.encounter_desc}</p>\n      <br />\n      {caveEncounterLog &&\n        caveEncounterLog.map((log) => {\n          return <p>{log}</p>;\n        })}\n      <CaveEntranceOptions\n        charAlive={charAlive}\n        setCharAlive={setCharAlive}\n        caveEncounterLog={caveEncounterLog}\n        setCaveEncounterLog={setCaveEncounterLog}\n        setPassedRoom={setPassedRoom}\n      />\n      {charAlive ? (\n        passedRoom ? (\n          <NavLink to=\"/encounter-2\" exact>Next Room</NavLink>\n        ) : (\n          <p>Make a choice</p>\n        )\n      ) : (\n        <NavLink to=\"/\">You are dead</NavLink>\n      )}\n    </div>\n  );\n};\n\nexport default CaveEncounter;\n"]},"metadata":{},"sourceType":"module"}