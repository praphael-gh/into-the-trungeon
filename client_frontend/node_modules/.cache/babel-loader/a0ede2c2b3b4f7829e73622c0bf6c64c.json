{"ast":null,"code":"var _jsxFileName = \"/home/soustop/Dev/projects/into-the-trungeon/client_frontend/src/Options/CaveEntranceOptions.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CaveEntranceOptions = _ref => {\n  _s();\n\n  let {\n    setCharAlive,\n    caveEncounterLog,\n    setCaveEncounterLog,\n    setPassedRoom\n  } = _ref;\n  setCharAlive(true);\n  setPass;\n  const [searched, setSearched] = useState(false);\n\n  const traverseRoom = () => {\n    if (searched) {\n      setCaveEncounterLog([...caveEncounterLog, \"You cross the small path to the other side.\"]);\n      setPassedRoom(true);\n    } else {\n      setCaveEncounterLog([...caveEncounterLog, \"You foolhardedly charge forward into the chasm, sending yourself to death\"]);\n      setCharAlive(false);\n      console.log(caveEncounterLog);\n    }\n  };\n\n  const searchRoom = () => {\n    fetch(\"/api/encounters/2\").then(resp => resp.json()).then(encounter => setCaveEncounterLog([...caveEncounterLog, encounter.searches[0].search_desc])).then(() => setSearched(true));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"cave-options\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => traverseRoom(),\n      children: \"Traverse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => searchRoom(),\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CaveEntranceOptions, \"IP+Wl8dnkz1iCT2InrO+78W6ntI=\");\n\n_c = CaveEntranceOptions;\nexport default CaveEntranceOptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"CaveEntranceOptions\");","map":{"version":3,"sources":["/home/soustop/Dev/projects/into-the-trungeon/client_frontend/src/Options/CaveEntranceOptions.js"],"names":["useState","CaveEntranceOptions","setCharAlive","caveEncounterLog","setCaveEncounterLog","setPassedRoom","setPass","searched","setSearched","traverseRoom","console","log","searchRoom","fetch","then","resp","json","encounter","searches","search_desc"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,mBAAmB,GAAG,QAKtB;AAAA;;AAAA,MALuB;AAC3BC,IAAAA,YAD2B;AAE3BC,IAAAA,gBAF2B;AAG3BC,IAAAA,mBAH2B;AAI3BC,IAAAA;AAJ2B,GAKvB;AACJH,EAAAA,YAAY,CAAC,IAAD,CAAZ;AACAI,EAAAA,OAAO;AACP,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMS,YAAY,GAAG,MAAM;AACzB,QAAIF,QAAJ,EAAc;AACZH,MAAAA,mBAAmB,CAAC,CAClB,GAAGD,gBADe,EAElB,6CAFkB,CAAD,CAAnB;AAIAE,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAND,MAMO;AACLD,MAAAA,mBAAmB,CAAC,CAClB,GAAGD,gBADe,EAElB,2EAFkB,CAAD,CAAnB;AAIAD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYR,gBAAZ;AACD;AACF,GAfD;;AAiBA,QAAMS,UAAU,GAAG,MAAM;AACvBC,IAAAA,KAAK,CAAC,mBAAD,CAAL,CACGC,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESG,SAAD,IACJb,mBAAmB,CAAC,CAAC,GAAGD,gBAAJ,EAAsBc,SAAS,CAACC,QAAV,CAAmB,CAAnB,EAAsBC,WAA5C,CAAD,CAHvB,EAKGL,IALH,CAKQ,MAAMN,WAAW,CAAC,IAAD,CALzB;AAMD,GAPD;;AASA,sBACE;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAMC,YAAY,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMG,UAAU,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA3CD;;GAAMX,mB;;KAAAA,mB;AA6CN,eAAeA,mBAAf","sourcesContent":["import { useState } from \"react\";\n\nconst CaveEntranceOptions = ({\n  setCharAlive,\n  caveEncounterLog,\n  setCaveEncounterLog,\n  setPassedRoom,\n}) => {\n  setCharAlive(true)\n  setPass\n  const [searched, setSearched] = useState(false);\n\n  const traverseRoom = () => {\n    if (searched) {\n      setCaveEncounterLog([\n        ...caveEncounterLog,\n        \"You cross the small path to the other side.\",\n      ]);\n      setPassedRoom(true);\n    } else {\n      setCaveEncounterLog([\n        ...caveEncounterLog,\n        \"You foolhardedly charge forward into the chasm, sending yourself to death\",\n      ]);\n      setCharAlive(false);\n      console.log(caveEncounterLog);\n    }\n  };\n\n  const searchRoom = () => {\n    fetch(\"/api/encounters/2\")\n      .then((resp) => resp.json())\n      .then((encounter) =>\n        setCaveEncounterLog([...caveEncounterLog, encounter.searches[0].search_desc])\n      )\n      .then(() => setSearched(true));\n  };\n\n  return (\n    <div id=\"cave-options\">\n      <button onClick={() => traverseRoom()}>Traverse</button>\n      <br />\n      <button onClick={() => searchRoom()}>Search</button>\n    </div>\n  );\n};\n\nexport default CaveEntranceOptions;\n"]},"metadata":{},"sourceType":"module"}