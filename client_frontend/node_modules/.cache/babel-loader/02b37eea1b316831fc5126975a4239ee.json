{"ast":null,"code":"var _jsxFileName = \"/home/sousman/Development/code/personal-projects/trungeon/trungeon/client_frontend/src/characters/CharacterLister.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CharacterLister = _ref => {\n  _s();\n\n  let {\n    user,\n    selectedCharacter,\n    setSelectedCharacter\n  } = _ref;\n  const [characterArray, setCharacterArray] = useState([]);\n  const [playerCharName, setPlayerCharName] = useState('');\n  useEffect(() => {\n    fetch(\"/api/default-chars\").then(resp => resp.json()).then(characters => setCharacterArray(characters));\n  }, []);\n\n  const confirmCharSelection = charState => {\n    setSelectedCharacter({ ...(charState.char_name = playerCharName),\n      ...charState\n    });\n    console.log(selectedCharacter);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"character_select\",\n    children: [characterArray.map(character => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: character.char_name,\n        onClick: () => {\n          setSelectedCharacter(character);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: character.char_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `${character.char_name}-desc`,\n          className: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: character.char_desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Character Skills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: character.skills.map(skill => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: skill.skill_name\n              }, skill.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, character.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Selected Class: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: selectedCharacter === {} ? selectedCharacter.char_class : \"No Character Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Character Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setPlayerCharName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => confirmCharSelection(selectedCharacter),\n      children: \"Confirm Character Selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CharacterLister, \"5DQRg9GPNFku+y67unqRRZSicmQ=\");\n\n_c = CharacterLister;\nexport default CharacterLister;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterLister\");","map":{"version":3,"sources":["/home/sousman/Development/code/personal-projects/trungeon/trungeon/client_frontend/src/characters/CharacterLister.js"],"names":["React","useEffect","useState","CharacterLister","user","selectedCharacter","setSelectedCharacter","characterArray","setCharacterArray","playerCharName","setPlayerCharName","fetch","then","resp","json","characters","confirmCharSelection","charState","char_name","console","log","map","character","char_desc","skills","skill","skill_name","id","char_class","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,eAAe,GAAG,QAAuD;AAAA;;AAAA,MAAtD;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,iBAAR;AAA2BC,IAAAA;AAA3B,GAAsD;AAC7E,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,EAAD,CAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAAC,oBAAD,CAAL,CACGC,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESG,UAAD,IAAgBP,iBAAiB,CAACO,UAAD,CAFzC;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAOA,QAAMC,oBAAoB,GAAIC,SAAD,IAAe;AAC1CX,IAAAA,oBAAoB,CAAC,EACnB,IAAGW,SAAS,CAACC,SAAV,GAAsBT,cAAzB,CADmB;AAEnB,SAAGQ;AAFgB,KAAD,CAApB;AAIAE,IAAAA,OAAO,CAACC,GAAR,CAAYf,iBAAZ;AACD,GAND;;AASA,sBACE;AAAK,IAAA,EAAE,EAAC,kBAAR;AAAA,eACGE,cAAc,CAACc,GAAf,CAAoBC,SAAD,IAAe;AACjC,0BACE;AACE,QAAA,EAAE,EAAEA,SAAS,CAACJ,SADhB;AAGE,QAAA,OAAO,EAAE,MAAM;AACbZ,UAAAA,oBAAoB,CAACgB,SAAD,CAApB;AACD,SALH;AAAA,gCAOE;AAAA,oBAAKA,SAAS,CAACJ;AAAf;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AAAK,UAAA,EAAE,EAAG,GAAEI,SAAS,CAACJ,SAAU,OAAhC;AAAwC,UAAA,SAAS,EAAC,aAAlD;AAAA,kCACE;AAAA,sBAAII,SAAS,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBACGD,SAAS,CAACE,MAAV,CAAiBH,GAAjB,CAAqBI,KAAK,IAAI;AAC7B,kCACE;AAAA,0BAAoBA,KAAK,CAACC;AAA1B,iBAASD,KAAK,CAACE,EAAf;AAAA;AAAA;AAAA;AAAA,sBADF;AAGD,aAJA;AADH;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA,SAEOL,SAAS,CAACK,EAFjB;AAAA;AAAA;AAAA;AAAA,cADF;AAuBD,KAxBA,CADH,eA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BF,eA2BE;AAAA,gBAAItB,iBAAiB,KAAK,EAAtB,GAA2BA,iBAAiB,CAACuB,UAA7C,GAA0D;AAA9D;AAAA;AAAA;AAAA;AAAA,YA3BF,eA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BF,eA6BE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEC,CAAC,IAAInB,iBAAiB,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV;AAAnD;AAAA;AAAA;AAAA;AAAA,YA7BF,eA8BE;AAAQ,MAAA,OAAO,EAAE,MAAMf,oBAAoB,CAACX,iBAAD,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CAtDD;;GAAMF,e;;KAAAA,e;AAwDN,eAAeA,eAAf","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nconst CharacterLister = ({ user, selectedCharacter, setSelectedCharacter }) => {\n  const [characterArray, setCharacterArray] = useState([]);\n  const [playerCharName, setPlayerCharName] = useState('')\n\n  useEffect(() => {\n    fetch(\"/api/default-chars\")\n      .then((resp) => resp.json())\n      .then((characters) => setCharacterArray(characters));\n  }, []);\n\n\n  const confirmCharSelection = (charState) => {\n    setSelectedCharacter({\n      ...charState.char_name = playerCharName,\n      ...charState\n    })\n    console.log(selectedCharacter)\n  }\n\n\n  return (\n    <div id=\"character_select\">\n      {characterArray.map((character) => {\n        return (\n          <div\n            id={character.char_name}\n            key={character.id}\n            onClick={() => {\n              setSelectedCharacter(character);\n            }}\n          >\n            <h1>{character.char_name}</h1> \n            <div id={`${character.char_name}-desc`} className=\"description\">\n              <p>{character.char_desc}</p>\n              <label>Character Skills</label>\n              <ul>\n                {character.skills.map(skill => {\n                  return (\n                    <li key={skill.id}>{skill.skill_name}</li>\n                  )\n                })}\n              </ul>\n            </div>\n            \n          </div>\n        );\n      })}\n      <h2>Selected Class: </h2>\n      <p>{selectedCharacter === {} ? selectedCharacter.char_class : \"No Character Selected\"}</p>\n      <label>Character Name:</label>\n      <input type=\"text\" onChange={e => setPlayerCharName(e.target.value)}/>\n      <button onClick={() => confirmCharSelection(selectedCharacter)}>Confirm Character Selection</button>\n    </div>\n  );\n};\n\nexport default CharacterLister;\n"]},"metadata":{},"sourceType":"module"}