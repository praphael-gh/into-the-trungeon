{"ast":null,"code":"var _jsxFileName = \"/home/soustop/Dev/projects/into-the-trungeon/client_frontend/src/Encounters/LoneGoblinEncounter.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport CharacterEncounterInfo from \"../Characters/CharacterEncounterInfo\";\nimport LoneGoblinOptions from \"../Options/LoneGoblinOptions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoneGoblinEncounter = _ref => {\n  _s();\n\n  let {\n    charAlive,\n    setCharAlive,\n    passedRoom,\n    setPassedRoom\n  } = _ref;\n  const [goblinEncounter, setGoblinEncounter] = useState({});\n  const [goblinEncounterLog, setGoblinEncounterLog] = useState([]);\n  useEffect(() => {\n    setPassedRoom(false);\n    fetch(\"/api/encounters/3\").then(resp => resp.json()).then(encounter => {\n      setGoblinEncounter(encounter);\n    });\n  }, []);\n  setPassedRoom(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"encounter-one\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: goblinEncounter.encounter_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: goblinEncounter.encounter_desc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), goblinEncounterLog && goblinEncounterLog.map(log => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: log\n      }, log, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 18\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(LoneGoblinOptions, {\n      setCharAlive: setCharAlive,\n      goblinEncounterLog: goblinEncounterLog,\n      setGoblinEncounterLog: setGoblinEncounterLog,\n      setPassedRoom: setPassedRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), charAlive ? passedRoom ? /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/encounter-2\",\n      exact: true,\n      children: \"Next Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Make a choice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/\",\n      exact: true,\n      children: \"You are dead\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CharacterEncounterInfo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoneGoblinEncounter, \"LRaQ3S7lMZObavHm6bm47Mj5E14=\");\n\n_c = LoneGoblinEncounter;\nexport default LoneGoblinEncounter;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoneGoblinEncounter\");","map":{"version":3,"sources":["/home/soustop/Dev/projects/into-the-trungeon/client_frontend/src/Encounters/LoneGoblinEncounter.js"],"names":["React","useEffect","useState","NavLink","CharacterEncounterInfo","LoneGoblinOptions","LoneGoblinEncounter","charAlive","setCharAlive","passedRoom","setPassedRoom","goblinEncounter","setGoblinEncounter","goblinEncounterLog","setGoblinEncounterLog","fetch","then","resp","json","encounter","encounter_name","encounter_desc","map","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAOC,sBAAP,MAAmC,sCAAnC;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;;;AAEA,MAAMC,mBAAmB,GAAG,QAKtB;AAAA;;AAAA,MALuB;AAC3BC,IAAAA,SAD2B;AAE3BC,IAAAA,YAF2B;AAG3BC,IAAAA,UAH2B;AAI3BC,IAAAA;AAJ2B,GAKvB;AACJ,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACW,kBAAD,EAAqBC,qBAArB,IAA8CZ,QAAQ,CAAC,EAAD,CAA5D;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAK,IAAAA,KAAK,CAAC,mBAAD,CAAL,CACGC,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESG,SAAD,IAAe;AACnBP,MAAAA,kBAAkB,CAACO,SAAD,CAAlB;AACD,KAJH;AAKD,GAPQ,EAON,EAPM,CAAT;AASAT,EAAAA,aAAa,CAAC,KAAD,CAAb;AAEA,sBACE;AAAK,IAAA,EAAE,EAAC,eAAR;AAAA,4BACE;AAAA,gBAAKC,eAAe,CAACS;AAArB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIT,eAAe,CAACU;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGR,kBAAkB,IACjBA,kBAAkB,CAACS,GAAnB,CAAwBC,GAAD,IAAS;AAC9B,0BAAO;AAAA,kBAAcA;AAAd,SAAQA,GAAR;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,CALJ,eAQE,QAAC,iBAAD;AACE,MAAA,YAAY,EAAEf,YADhB;AAEE,MAAA,kBAAkB,EAAEK,kBAFtB;AAGE,MAAA,qBAAqB,EAAEC,qBAHzB;AAIE,MAAA,aAAa,EAAEJ;AAJjB;AAAA;AAAA;AAAA;AAAA,YARF,EAcGH,SAAS,GACRE,UAAU,gBACR,QAAC,OAAD;AAAS,MAAA,EAAE,EAAC,cAAZ;AAA2B,MAAA,KAAK,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAKR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANM,gBASR,QAAC,OAAD;AAAS,MAAA,EAAE,EAAC,GAAZ;AAAgB,MAAA,KAAK,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBJ,eA2BE,QAAC,sBAAD;AAAA;AAAA;AAAA;AAAA,YA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CArDD;;GAAMH,mB;;KAAAA,mB;AAuDN,eAAeA,mBAAf","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport CharacterEncounterInfo from \"../Characters/CharacterEncounterInfo\";\nimport LoneGoblinOptions from \"../Options/LoneGoblinOptions\";\n\nconst LoneGoblinEncounter = ({\n  charAlive,\n  setCharAlive,\n  passedRoom,\n  setPassedRoom,\n}) => {\n  const [goblinEncounter, setGoblinEncounter] = useState({});\n  const [goblinEncounterLog, setGoblinEncounterLog] = useState([]);\n  \n\n  useEffect(() => {\n    setPassedRoom(false)\n    fetch(\"/api/encounters/3\")\n      .then((resp) => resp.json())\n      .then((encounter) => {\n        setGoblinEncounter(encounter)\n      });\n  }, []);\n\n  setPassedRoom(false)\n\n  return (\n    <div id=\"encounter-one\">\n      <h1>{goblinEncounter.encounter_name}</h1>\n      <p>{goblinEncounter.encounter_desc}</p>\n      <br />\n      {goblinEncounterLog &&\n        goblinEncounterLog.map((log) => {\n          return <p key={log}>{log}</p>;\n        })}\n      <LoneGoblinOptions\n        setCharAlive={setCharAlive}\n        goblinEncounterLog={goblinEncounterLog}\n        setGoblinEncounterLog={setGoblinEncounterLog}\n        setPassedRoom={setPassedRoom}\n      />\n      {charAlive ? (\n        passedRoom ? (\n          <NavLink to=\"/encounter-2\" exact>\n            Next Room\n          </NavLink>\n        ) : (\n          <p>Make a choice</p>\n        )\n      ) : (\n        <NavLink to=\"/\" exact>\n          You are dead\n        </NavLink>\n      )}\n      <CharacterEncounterInfo />\n    </div>\n  );\n  \n};\n\nexport default LoneGoblinEncounter;\n"]},"metadata":{},"sourceType":"module"}