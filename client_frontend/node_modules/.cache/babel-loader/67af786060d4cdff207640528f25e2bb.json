{"ast":null,"code":"var _jsxFileName = \"/home/soustop/Dev/projects/into-the-trungeon/client_frontend/src/Encounters/LoneGoblinEncounter.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoneGoblinEncounter = (charAlive, setCharAlive, passedRoom, setPassedRoom) => {\n  _s();\n\n  const [goblinEncounter, setGoblinEncounter] = useState({});\n  const [goblinEncounterLog, setGoblinEncounterLog] = useState([]);\n  useEffect(() => {\n    fetch(\"/api/encounters/2\").then(resp => resp.json()).then(encounter => setCaveEncounter(encounter));\n  }, []);\n\n  const searchRoom = () => {\n    fetch(\"/api/searches/3\").then(resp => resp.json()).then(search => setGoblinEncounterLog([...goblinEncounterLog, search.search_desc])).then(() => setSearched(true));\n  };\n\n  const sneakRoom = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoneGoblinEncounter, \"LRaQ3S7lMZObavHm6bm47Mj5E14=\");\n\n_c = LoneGoblinEncounter;\nexport default LoneGoblinEncounter;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoneGoblinEncounter\");","map":{"version":3,"sources":["/home/soustop/Dev/projects/into-the-trungeon/client_frontend/src/Encounters/LoneGoblinEncounter.js"],"names":["React","useEffect","useState","LoneGoblinEncounter","charAlive","setCharAlive","passedRoom","setPassedRoom","goblinEncounter","setGoblinEncounter","goblinEncounterLog","setGoblinEncounterLog","fetch","then","resp","json","encounter","setCaveEncounter","searchRoom","search","search_desc","setSearched","sneakRoom"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,mBAAmB,GAAG,CAC1BC,SAD0B,EAE1BC,YAF0B,EAG1BC,UAH0B,EAI1BC,aAJ0B,KAKvB;AAAA;;AACD,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACQ,kBAAD,EAAqBC,qBAArB,IAA8CT,QAAQ,CAAC,EAAD,CAA5D;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,KAAK,CAAC,mBAAD,CAAL,CACGC,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESG,SAAD,IAAeC,gBAAgB,CAACD,SAAD,CAFvC;AAGD,GAJM,EAIJ,EAJI,CAAT;;AAMA,QAAME,UAAU,GAAG,MAAM;AACtBN,IAAAA,KAAK,CAAC,iBAAD,CAAL,CACAC,IADA,CACMC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADf,EAEAF,IAFA,CAEMM,MAAD,IACJR,qBAAqB,CAAC,CAAC,GAAGD,kBAAJ,EAAwBS,MAAM,CAACC,WAA/B,CAAD,CAHtB,EAKAP,IALA,CAKK,MAAMQ,WAAW,CAAC,IAAD,CALtB;AAMF,GAPD;;AASA,QAAMC,SAAS,GAAG,MAAM,CAEvB,CAFD;;AAMF,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAjCD;;GAAMnB,mB;;KAAAA,mB;AAmCN,eAAeA,mBAAf","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nconst LoneGoblinEncounter = (\n  charAlive,\n  setCharAlive,\n  passedRoom,\n  setPassedRoom\n) => {\n    const [goblinEncounter, setGoblinEncounter] = useState({})\n    const [goblinEncounterLog, setGoblinEncounterLog] = useState([])\n\n    useEffect(() => {\n        fetch(\"/api/encounters/2\")\n          .then((resp) => resp.json())\n          .then((encounter) => setCaveEncounter(encounter));\n      }, []);\n\n    const searchRoom = () => {\n       fetch(\"/api/searches/3\")\n      .then((resp) => resp.json())\n      .then((search) =>\n        setGoblinEncounterLog([...goblinEncounterLog, search.search_desc])\n      )\n      .then(() => setSearched(true));\n    }\n\n    const sneakRoom = () => {\n\n    }\n\n\n    \n  return (\n    <h1>Hello</h1>\n  )\n};\n\nexport default LoneGoblinEncounter;\n"]},"metadata":{},"sourceType":"module"}