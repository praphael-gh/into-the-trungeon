{"ast":null,"code":"var _jsxFileName = \"/home/soustop/Dev/projects/into-the-trungeon/client_frontend/src/Options/LoneGoblinOptions.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoneGoblinOptions = _ref => {\n  _s();\n\n  let {\n    setCharAlive,\n    goblinEncounterLog,\n    setGoblinEncounterLog,\n    setPassedRoom\n  } = _ref;\n  const [searched, setSearched] = useState(false);\n  const [sneaked, setSneaked] = useState(false);\n\n  const traverseRoom = () => {\n    if (searched) {\n      setGoblinEncounterLog([...goblinEncounterLog, \"You look to see the chittering goblin turn its head towards you, but it seems to pay you no mind. You cross the room without issue.\"]);\n      setPassedRoom(true);\n    } else if (searched && sneaked) {\n      setGoblinEncounterLog([...goblinEncounterLog, \"Having already snuck across the room, you are able to safely leave.\"]);\n      setPassedRoom(true);\n    } else {\n      setGoblinEncounterLog([...goblinEncounterLog, \"You walk into the room without a second glance. You suddenly hear the small pitter-patter of bare feet- CLONK! You are knocked out cold. A goblin has gotten the better of you.\"]);\n      setCharAlive(false);\n      console.log(goblinEncounterLog);\n    }\n  };\n\n  const searchRoom = () => {\n    setPassedRoom(false);\n    fetch(\"/api/encounters/3\").then(resp => resp.json()).then(encounter => setGoblinEncounterLog([...goblinEncounterLog, `You see something quivering in the darkness. ${encounter.enemies[0].enemy_desc} And something else. ${encounter.searches[0].search_desc}`])).then(() => setSearched(true));\n  };\n\n  const sneakRoom = () => {\n    setPassedRoom(false);\n    setGoblinEncounterLog([...goblinEncounterLog, 'You creep along the edge of the room, careful not to make any noise, you are able to safely traverse the room.']);\n    setSneaked(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"goblin-options\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => traverseRoom(),\n      children: \"Traverse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => searchRoom(),\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sneakRoom(),\n      children: \"Sneak\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoneGoblinOptions, \"8l4MM4ti/e7w/UeDvvC/xoFl2Ps=\");\n\n_c = LoneGoblinOptions;\nexport default LoneGoblinOptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoneGoblinOptions\");","map":{"version":3,"sources":["/home/soustop/Dev/projects/into-the-trungeon/client_frontend/src/Options/LoneGoblinOptions.js"],"names":["useState","LoneGoblinOptions","setCharAlive","goblinEncounterLog","setGoblinEncounterLog","setPassedRoom","searched","setSearched","sneaked","setSneaked","traverseRoom","console","log","searchRoom","fetch","then","resp","json","encounter","enemies","enemy_desc","searches","search_desc","sneakRoom"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,iBAAiB,GAAG,QAKpB;AAAA;;AAAA,MALqB;AACzBC,IAAAA,YADyB;AAEzBC,IAAAA,kBAFyB;AAGzBC,IAAAA,qBAHyB;AAIzBC,IAAAA;AAJyB,GAKrB;AACJ,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMU,YAAY,GAAG,MAAM;AACzB,QAAIJ,QAAJ,EAAc;AACZF,MAAAA,qBAAqB,CAAC,CACpB,GAAGD,kBADiB,EAEpB,qIAFoB,CAAD,CAArB;AAIAE,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAND,MAMO,IAAKC,QAAD,IAAeE,OAAnB,EAA6B;AAClCJ,MAAAA,qBAAqB,CAAC,CACpB,GAAGD,kBADiB,EAEpB,qEAFoB,CAAD,CAArB;AAIAE,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KANM,MAMA;AACLD,MAAAA,qBAAqB,CAAC,CACpB,GAAGD,kBADiB,EAEpB,iLAFoB,CAAD,CAArB;AAIAD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYT,kBAAZ;AACD;AACF,GArBD;;AAuBA,QAAMU,UAAU,GAAG,MAAM;AACvBR,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAS,IAAAA,KAAK,CAAC,mBAAD,CAAL,CACGC,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAEQG,SAAS,IACbd,qBAAqB,CAAC,CAAC,GAAGD,kBAAJ,EAAyB,gDAA+Ce,SAAS,CAACC,OAAV,CAAkB,CAAlB,EAAqBC,UAAW,wBAAuBF,SAAS,CAACG,QAAV,CAAmB,CAAnB,EAAsBC,WAAY,EAAjK,CAAD,CAHzB,EAKGP,IALH,CAKQ,MAAMR,WAAW,CAAC,IAAD,CALzB;AAOD,GATD;;AAWA,QAAMgB,SAAS,GAAG,MAAM;AACtBlB,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAD,IAAAA,qBAAqB,CAAC,CAAC,GAAGD,kBAAJ,EAAwB,gHAAxB,CAAD,CAArB;AACAM,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAMC,YAAY,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMG,UAAU,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,OAAO,EAAE,MAAMU,SAAS,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA1DD;;GAAMtB,iB;;KAAAA,iB;AA4DN,eAAeA,iBAAf","sourcesContent":["import { useState } from \"react\";\n\nconst LoneGoblinOptions = ({\n  setCharAlive,\n  goblinEncounterLog,\n  setGoblinEncounterLog,\n  setPassedRoom,\n}) => {\n  const [searched, setSearched] = useState(false);\n  const [sneaked, setSneaked] = useState(false);\n\n  const traverseRoom = () => {\n    if (searched) {\n      setGoblinEncounterLog([\n        ...goblinEncounterLog,\n        \"You look to see the chittering goblin turn its head towards you, but it seems to pay you no mind. You cross the room without issue.\",\n      ]);\n      setPassedRoom(true);\n    } else if ((searched) && (sneaked)) {\n      setGoblinEncounterLog([\n        ...goblinEncounterLog,\n        \"Having already snuck across the room, you are able to safely leave.\"\n      ])\n      setPassedRoom(true);\n    } else {\n      setGoblinEncounterLog([\n        ...goblinEncounterLog,\n        \"You walk into the room without a second glance. You suddenly hear the small pitter-patter of bare feet- CLONK! You are knocked out cold. A goblin has gotten the better of you.\",\n      ]);\n      setCharAlive(false);\n      console.log(goblinEncounterLog);\n    }\n  };\n\n  const searchRoom = () => {\n    setPassedRoom(false)\n    fetch(\"/api/encounters/3\")\n      .then((resp) => resp.json())\n      .then(encounter => \n        setGoblinEncounterLog([...goblinEncounterLog, `You see something quivering in the darkness. ${encounter.enemies[0].enemy_desc} And something else. ${encounter.searches[0].search_desc}`])\n      )\n      .then(() => setSearched(true))\n      \n  };\n\n  const sneakRoom = () => {\n    setPassedRoom(false)\n    setGoblinEncounterLog([...goblinEncounterLog, 'You creep along the edge of the room, careful not to make any noise, you are able to safely traverse the room.'])\n    setSneaked(true)\n  };\n\n  return (\n    <div id=\"goblin-options\">\n      <button onClick={() => traverseRoom()}>Traverse</button>\n      <br />\n      <button onClick={() => searchRoom()}>Search</button>\n      <br />\n      <button onClick={() => sneakRoom()}>Sneak</button>\n    </div>\n  );\n};\n\nexport default LoneGoblinOptions;\n"]},"metadata":{},"sourceType":"module"}